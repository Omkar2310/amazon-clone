{"ast":null,"code":"export const initialState = {\n  basket: []\n};\nexport const getTotalBasket = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amt, item) => amt + item.price, 0);\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case 'ADD_TO_BASKET':\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case 'REMOVE_FROM_BASKET':\n      const index = state.basket.findIndex(basketitem => basketitem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Can't remove the product (id:${action}) as it's not in Basket!`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sky/Documents/webdev/amazon-clone/src/reducer.js"],"names":["initialState","basket","getTotalBasket","reduce","amt","item","price","reducer","state","action","console","log","type","index","findIndex","basketitem","id","newBasket","splice","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC3BC,EAAAA,MAAM,EAAC;AADoB,CAArB;AAIP,OAAO,MAAMC,cAAc,GAAGD,MAAD,IAAYA,MAAZ,aAAYA,MAAZ,uBAAYA,MAAM,CAAEE,MAAR,CAAe,CAACC,GAAD,EAAMC,IAAN,KACtDD,GAAG,GAAGC,IAAI,CAACC,KAD4B,EAEtC,CAFsC,CAAlC;;AAIP,MAAMC,OAAO,GAAE,CAACC,KAAD,EAAOC,MAAP,KAAiB;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AAEA,SAAK,eAAL;AACC,aAAO,EAAE,GAAGJ,KAAL;AAAYP,QAAAA,MAAM,EAAC,CAAC,GAAGO,KAAK,CAACP,MAAV,EAAiBQ,MAAM,CAACJ,IAAxB;AAAnB,OAAP;;AAED,SAAK,oBAAL;AACC,YAAMQ,KAAK,GAACL,KAAK,CAACP,MAAN,CAAaa,SAAb,CACVC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAiBP,MAAM,CAACO,EAD7B,CAAZ;AAGC,UAAIC,SAAS,GAAE,CAAC,GAAGT,KAAK,CAACP,MAAV,CAAf;;AACA,UAAGY,KAAK,IAAE,CAAV,EACA;AACCI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAuB,CAAvB;AACA,OAHD,MAGK;AACJH,QAAAA,OAAO,CAACS,IAAR,CAAc,gCAA+BV,MAAO,0BAApD;AACA;;AACF,aAAO,EACL,GAAGD,KADE;AAELP,QAAAA,MAAM,EAACgB;AAFF,OAAP;;AAID;AACC,aAAOT,KAAP;AArBD;AAuBA,CAzBD;;AA2BA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n\tbasket:[],\n}\n\nexport const getTotalBasket= (basket) => basket?.reduce((amt, item) =>\n  amt + item.price\n\t, 0);\n\nconst reducer =(state,action) =>{\n\tconsole.log(action);\n\tswitch (action.type) {\n\n\tcase 'ADD_TO_BASKET':\n\t\treturn { ...state, basket:[...state.basket,action.item],\n\t\t };\n\tcase 'REMOVE_FROM_BASKET':\n\t\tconst index=state.basket.findIndex(\n\t\t\t(basketitem) => basketitem.id=== action.id\n\t\t\t);\n\t\t\tlet newBasket =[...state.basket];\n\t\t\tif(index>=0)\n\t\t\t{\n\t\t\t\tnewBasket.splice(index,1);\n\t\t\t}else{\n\t\t\t\tconsole.warn(`Can't remove the product (id:${action}) as it's not in Basket!`)\n\t\t\t}\n\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbasket:newBasket\n\t\t};\n\tdefault:\n\t\treturn state;\n\t}\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}